sed '2s/root/sb/g' 1.txt  改第二行所有root
sed '2s/root/sb/'  1.txt  改第二行第一个

awk
awk -F：'{print $1,$4}' /etc/passwd 指定分隔符
$0 整行
NF 多少段  $NF 最后一段  $(NF-1)倒数第二段
NR 行号 （直接NR）
awk -F: 'NR==1{print $1,NR}' test
awk -F: 'NR<=3{print NR,"---"，$1}' test    '  " "  '自己定义输出
		'NR>=3 && NR<=5{print NR,"-------",$1}'  test
		'NR<=2 || NR>=7{print NR,"-------",$1}'	 test
		'/nologin$/{print $1}' test
		'$1~/^r.*t$/{print $3,NR}' tes
		'$3 >=7{print NR,$1}'  test
count=7
awk -v x=$count -F: '$3 >= x{print NR,$1,$3}' test 
UID大于等于x的打出来

ifocnifg |awk 'NR==2{print $2}'

cat a.txt |sort |uniq -c
cat test |cut -d: -f1
du -sh 统计文件大小
find / -type f  (普通文件)
find / -name "*.txt"
find / -size +10M and -size -30M  
dd if=/dev/zero  of=/a.txt bs=20M count=1
grep -rl 'root' /test  递归查询内容显示文件夹



shell
vi set-host.sh
read -p 'please input your hostname:'  name 
hostnamectl set-hostname $name 


yum -y install bc 
scale浮点运算   bc百分率运算
0.71 根据小数点后面scale后移，默认都移动两位

内存使用率 yum装bc
mem_total=`free | awk  'NR==2{print $2}'`
mem_use=`free | awk  'NR==3{print $3}'`
echo "scale=2;$mem_use/$mem_total" |bc -l |cut -d . -f2

变量
set
env
echo $1
unset $1
echo $PWD  大写字母为系统变量
改用户 PS1 
PS1=''

全局变量：自己及多有人都能取到

运算
((2<10))  
echo $?
0

x=2
y=2
[ $x -ge $y ]
echo $?


gt大于
lt小于
ge大于等于
le小于等于
eq等于
ne不等于

[ $x -gt $y -a $a -gt $b ]
[ $x -ge $y -o $a -le $b ]

+= 意思  x=$x+1
((x=x+3)) ======  x+=3


((i++)) 自增1
$((x+=1))
 
x=1
a=$((x+=1))
echo $a




测试文件状态
-d 目录
-s 文件长度 > 0、非空
-f 正规文件
-w 可写

-r 可读

-x 可执行

-L 符号连接

-u 文件有 suid 位设置


= 两个字符串相等
!= 两个字符串不相等
-z 空串
-n 非空串

vi 1.sh 
#!/bin/bash
var='/etc/init.d'
var='/etc/passwd'
if [ -d $var ]
    then
        echo "$var is dictionary"

elif [ -b $var ]
    then
        echo "$var is block"
elif [ -f $var ]
    then
        echo "$var is regular file"
else
        echo 'unknow'
fi


if [ $x -eq 1 ];then echo 'x is 1';fi 

vi test.sh 
#test.sh
echo $0
echo $1
echo $2
echo $3
echo ${11}		
echo '$$' $$    这个进程的pid
echo '$*' $*	所有的
echo '$@' $@	所有的
echo '$#' $#    总共多少个 
echo '$?' $?	执行是否正确的输出
[root@localhost tmp]# ./test.sh 1 2 3 4 5 6 7 8 9 10 11
./test.sh
1
2
3
11
$$ 7800
$* 1 2 3 4 5 6 7 8 9 10 11
$@ 1 2 3 4 5 6 7 8 9 10 11
$# 11
$? 0










expr 1 + 2
expr 99 / 134  
yum install bc -y 浮点运算

echo 'scale=2;30/1000' | bc -l

free | awk 'NR==2{print $2}'

[ -x ]  文件属性
[ -d ]	文件 
[ -s ]  文件存在并且非空

cp -a 1 2


#!/bin/bash
ps aux |grep nginx |grep -v 'grep'
if [ $? -ne 0 ]
then
    systemctl start nginx
fi

















